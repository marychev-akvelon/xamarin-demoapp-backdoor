# Universal Windows Platform
# Build a Universal Windows Platform project using Visual Studio.
# Add steps that test and distribute an app, save build artifacts, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  buildPlatform: 'AnyCPU'    

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '**/backdoor.sln'

- task: XamarinAndroid@1
  inputs:
    projectFile: '**/backdoor.Droid.csproj'
    outputDirectory: '$(build.binariesdirectory)/$(BuildConfiguration)'
    configuration: '$(buildConfiguration)'
    msbuildArchitectureOption: 'x64'
    jdkOption: 'JDKVersion'

- task: MSBuild@1
  displayName: 'Build all **/*Tests.csproj files'
  inputs:      
    solution: "**/*Tests.csproj"
    configuration: '$(buildConfiguration)'
    msbuildArguments: '/p:OutputPath="$(build.binariesdirectory)/$(BuildConfiguration)/test-assembly"'

- task: AndroidSigning@2
  displayName: "align and sign"  
  inputs:
    # NOTE: Just for check
    apkFiles: '$(build.binariesdirectory)/$(BuildConfiguration)/*.apk'
    jarsign: false

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'

- task: CopyFiles@2
  displayName: 'copy the tools folder because wild cards seem to fail on the tools'
  inputs:
    Contents: '**/Xamarin.UITest.*/**'
    SourceFolder: '$(build.sourcesdirectory)/packages'
    TargetFolder: '$(build.sourcesdirectory)/tools'
    flattenFolders: true
  
- task: CopyFiles@2
  displayName: 'copy the tools folder because wild cards seem to fail on the tools'
  inputs:
    Contents: '**/Xamarin.UITest.*/**'
    SourceFolder: '$(Build.ArtifactStagingDirectory)/packages'
    TargetFolder: '$(Build.ArtifactStagingDirectory)/tools'
    flattenFolders: true

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      echo '*********'
      ls -R '$(Build.ArtifactStagingDirectory)'